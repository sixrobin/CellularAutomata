#pragma kernel Init
#pragma kernel Next
#pragma kernel ApplyBuffer

// https://en.wikipedia.org/wiki/Brian%27s_Brain

#include "CellularAutomaton2D.cginc"

[numthreads(8,8,1)]
void Init(uint3 id : SV_DispatchThreadID)
{
    float value = random(id.xy);
    
    if (value < 0.5) value = 0;
    else if (value < 0.75) value = 0.5;
    else value = 1;

    _Result[id.xy] = value;
}

[numthreads(8,8,1)]
void Next(uint3 id : SV_DispatchThreadID)
{
    float4 pos = float4(id.x / _Resolution, id.y / _Resolution, 0, 0);
    int neighbours = ComputeNeighboursCount(pos);
    float state = tex2Dlod(_GridBuffer, pos).r;

    if (state < 0.1 && neighbours == 2)
        state = 1; // "Off" cell with 2 "on" neighbours goes alive.
    else
        state -= 0.5; // "On" and "dying" cells decay each iteration ("on" become "dying", "dying become "off").
    
    _Result[id.xy] = float4(state.xxx, 1);
}

[numthreads(8,8,1)]
void ApplyBuffer(uint3 id : SV_DispatchThreadID)
{
    ApplyBuffer(id.xy);
}